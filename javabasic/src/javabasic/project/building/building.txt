### 빌딩 인터페이스 / 클래스 설계 및 구현

# 오른쪽 4명 1팀, 왼쪽 4명 1팀 설계 협의
# 설계가 완성되면 구현

# 세부 사항
- 빌딩에는 아파트, 빌라, 공장, 학교
- 아파트에는 일반아파트, 주상복합아파트
- 빌라에는 고급빌라, 일반빌라
- 공장에는 벽돌공장, 시멘트공장, 유리공장
- 학교에는 초등학교, 중학교, 고등학교, 대학교

# 구현 사항
1. 클래스 상속관계(is a) 구현
- 어떤 것이 추상클래스인가? 어떤 것이 구체클래스인가?
=> 빌딩, 아파트, 빌라, 공장, 학교 -> 추상 / 나머지는 구체
- 클래스간의 상속관계는 어떻게 결정할 것인가?

2. 클래스와 멤버변수간의 위임관계(has a)
- 각 클래스마다 어떤 데이터(멤버변수)가 필요한가? //건물에 상속된 것의 변수를 만들기때문에 건물에 초점을 맞춰야함
- 각 데이터(멤버변수)가 어떤 클래스에 있는 것이 더 나은가?
- 공통데이터는 무엇인가? 개별데이터는 무엇인가?
- 모든 건물에 있는 것? 모든 아파트에 있는 것? 모든 빌라에 있는 것?
  모든 학교에 있는 것? 모든 공장에 있는 것?
- 아파트에만 있는 것? 빌라에만 있는 것? 공장에만 있는 것? 학교에만 있는 것?
- 초등학교에만 있는 것? 중학교에만 있는 것? 고등학교에만 있는 것? 대학교에만 있는 것?
- 아파트는 건물이다.
- 일반아파트, 주상복합아파트는 아파트이면서 건물이다.

//int는 숫자를 받지만 ex) 5층, 10층 과 같이 연산하는게 아니면 String으로 받는게 맞음 (연산이 아니면 문자열이됨)

3. IBuilding 인터페이스를 만들어 기능 설계를 합니다. //짓는다, 전기를 공급한다
	아파트에만 필요한 기능들은 IApart 인터페이스를 만들어 기능 설계를 합니다. // n개의 동에 하나씩 놀이터만들기
	빌라에만 필요한 기능들은 IVilla 인터페이스를 만들어 기능 설계를 합니다. // 1층에 주차장만들기 -> 주차장은 빌라에만 필요한게아님,,
	공장에만 필요한 기능들은 IFactory 인터페이스를 만들어 기능 설계를 합니다. // 굴뚝을 짓는다(일정면적 간격으로 하나씩)
	학교에만 필요한 기능들은 ISchool 인터페이스를 만들어 기능 설계를 합니다. // 층마다 다목적실(실험실,미술실ㄷ긍)만들기 -> 체육관도 필요할듯
	- 공통기능은 무엇인가? 개별기능은 무엇인가?
	- "건물"의 관점에서/ "건축"의 관점에서
	
4. 기능 설계가 완료되면 추상클래스와 구체클래스에서 구체적인 기능을 구현 합니다.



//메서드만들때 boolean으로 반환하면 보통 이름에 is, 이름이나 수 반환하면 get을 붙임
	